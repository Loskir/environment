#!/usr/bin/env ruby
# Split flac/ape+cue files to separated FLAC tracks.
# Packages required: iconv, cuetools, shntool, flac, wavpack.
# To decode ape files you need mac package: 
# http://members.iinet.net.au/~aidanjm/mac-3.99-u4_b3-1_i386.deb

class Cue
  attr_accessor :encoding
  attr_accessor :file
  attr_accessor :dir
  attr_accessor :audio_file
  
  attr_accessor :artist
  attr_accessor :genre
  attr_accessor :date
  
  FIELDS = { :genre => '%g', :artist => '%p', :album => '%T', :title => '%t',
             :tracknumber => '%n', :tracktotal => '%N' }
  
  def file=(path)
    @file = path
    @dir = File.dirname(@file)
  end
  
  def iconv
    "iconv -f #{encoding}"
  end
  
  def audio_file
    unless @audio_file
      match = `cat "#{file}" | #{iconv}`.match(/^FILE "([^"]+)"/)
      unless match
        puts 'Could not find audio file in cue. Please set it by -a option.'
        exit
      end
      @audio_file = File.join(dir, match[1])
    end
    @audio_file
  end
  
  def split
    `cuebreakpoints "#{file}" | shnsplit -o flac "#{audio_file}"`
  end
  
  def each_track(&block)
    Dir.glob('split-track*.flac') do |file|
      number = file.match(/track(\d+)\.flac$/)[1]
      data = {}
      FIELDS.each do |key, format|
        data[key] = print(number, "-t '#{format}'")
      end
      [:artist, :genre, :date].each do |field|
        value = send(field)
        data[field] = value if value
      end
      yield(file, data)
    end
  end
  
  def print(track, options = '')
    `cueprint "#{file}" -n #{track} #{options} | #{iconv}`
  end
end

cue = Cue.new

require 'optparse'
console = OptionParser.new do |opts|
  opts.banner  = "Usage: cuesplit [OPTIONS] CUE-FILE\n" +
                 "Split flac/ape+cue files to separated FLAC tracks."
  opts.version = '0.1'
  
  opts.on('-e ENCODING', 'Charset encoding of cue-file') do |encoding|
    cue.encoding = encoding
  end
  
  opts.on('-a AUDIO_FILE', 'FLAC or APE file with audio') do |path|
    cue.audio_file = path
  end
  
  opts.on('--artist ARTIST', 'Set artist name manually') do |artist|
    cue.artist = artist
  end
  
  opts.on('--genre GENRE', 'Set artist genre manually') do |genre|
    cue.genre = genre
  end
  
  opts.on('--date DATE', 'Set album date manually') do |date|
    cue.date = date
  end
  
  opts.on_tail('-h', '--help', 'Show this message') do
    puts opts
    exit
  end
end
console.parse!

unless ARGV.first
  puts console.help
  exit
end

cue.file = ARGV.first

unless File.exists? cue.file
  puts "File #{cue.file} isn't exists."
  exit
end

cue.split
cue.each_track do |file, data|
  `metaflac --remove-all-tags "#{file}"`
  data.each do |key, value|
    `metaflac --set-tag="#{key}=#{value}" "#{file}"`
  end
  File.rename(file, "#{data[:artist]} - #{data[:title]}.flac")
end
